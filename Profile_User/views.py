# views.py
from django.shortcuts import render
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from django.contrib.auth import update_session_auth_hash

from .forms import UserProfileForm, PasswordChangeCustomForm, EmailUpdateForm
from english.models import USER_CLASS

@login_required
def profile_view(request):
    user = request.user
    user_profile = user.profile
    active_tab = request.GET.get('active_tab', 'personal-info')

    profile_form = UserProfileForm(instance=user_profile)
    password_form = PasswordChangeCustomForm(user)
    email_form = EmailUpdateForm(initial={'email': user.email})

    if request.method == 'POST':
        if 'personal-info-submit' in request.POST:
            profile_form = UserProfileForm(request.POST, request.FILES, instance=user_profile)
            user.first_name = request.POST.get('first_name')
            user.last_name = request.POST.get('last_name')
            if profile_form.is_valid():
                user.save()
                profile_form.save()
                messages.success(request, "ƒê√£ c·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n.")
            else:
                messages.error(request, "L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin.")
            active_tab = 'personal-info'


        elif 'password-submit' in request.POST:
            password_form = PasswordChangeCustomForm(user, request.POST)
            if password_form.is_valid():
                password_form.save()
                update_session_auth_hash(request, user)
                messages.success(request, "ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng.")
            else:
                print("Password form errors:", password_form.errors)  # üëà DEBUG
                messages.error(request, "L·ªói khi ƒë·ªïi m·∫≠t kh·∫©u.")
            active_tab = 'password'

        elif 'email-submit' in request.POST:
            email_form = EmailUpdateForm(request.POST)
            if email_form.is_valid():
                user.email = email_form.cleaned_data['email']
                user.save()
                messages.success(request, "C·∫≠p nh·∫≠t email th√†nh c√¥ng.")
            else:
                print("Email form errors:", email_form.errors)  # üëà DEBUG
                messages.error(request, "Email kh√¥ng h·ª£p l·ªá.")
            active_tab = 'email'

    enrolled_classes = USER_CLASS.objects.filter(user=user).select_related('classes')

    return render(request, 'profile.html', {
        'user': user,
        'profile_form': profile_form,
        'password_form': password_form,
        'email_form': email_form,
        'enrolled_classes': [uc.classes for uc in enrolled_classes],
        'active_tab': active_tab,
    })



# @login_required
# def profile_view(request):
#     # X·ª≠ l√Ω tab active
#     active_tab = request.GET.get('tab', 'personal-info')
#
#     user_profile = USER_PROFILE.objects.get(userprofile=request.user)
#     # Form th√¥ng tin c√° nh√¢n
#     profile_form = ProfileForm(instance=request.user.userprofile)
#
#     # Form ƒë·ªïi m·∫≠t kh·∫©u
#     password_form = CustomPasswordChangeForm(request.user)
#
#     # Form ƒë·ªïi email
#     email_form = EmailChangeForm()
#
#     if request.method == 'POST':
#         if 'personal-info-submit' in request.POST:
#             profile_form = ProfileForm(
#                 request.POST,
#                 request.FILES,
#                 instance=request.user.userprofile
#             )
#             if profile_form.is_valid():
#                 profile_form.save()
#                 messages.success(request, 'Th√¥ng tin c√° nh√¢n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!')
#                 return redirect('profile')
#
#         elif 'password-submit' in request.POST:
#             password_form = CustomPasswordChangeForm(request.user, request.POST)
#             if password_form.is_valid():
#                 user = password_form.save()
#                 update_session_auth_hash(request, user)
#                 messages.success(request, 'M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh c√¥ng!')
#                 return redirect('profile?tab=password')
#
#         elif 'email-submit' in request.POST:
#             email_form = EmailChangeForm(request.POST)
#             # X·ª≠ l√Ω logic ƒë·ªïi email ·ªü ƒë√¢y
#
#     context = {
#         'active_tab': active_tab,
#         'profile_form': profile_form,
#         'password_form': password_form,
#         'email_form': email_form,
#         'user': request.user,
#     }
#     return render(request, 'profile.html', context)
# # from django.shortcuts import render
# # def Profile_User(request):
# #     return render(request, 'backup.html')

# from .models import USER_PROFILE

# @login_required
# def profile_view(request):
#     active_tab = request.GET.get('tab', 'personal-info')
#
#     # Truy v·∫•n th·ªß c√¥ng user profile t·ª´ model
#     user_profile = USER_PROFILE.objects.get(userprofile=request.user)
#
#     # Form th√¥ng tin c√° nh√¢n
#     profile_form = ProfileForm(instance=user_profile)
#
#     # Form ƒë·ªïi m·∫≠t kh·∫©u
#     password_form = CustomPasswordChangeForm(request.user)
#
#     # Form ƒë·ªïi email
#     email_form = EmailChangeForm()
#
#     if request.method == 'POST':
#         if 'personal-info-submit' in request.POST:
#             profile_form = ProfileForm(
#                 request.POST,
#                 request.FILES,
#                 instance=user_profile
#             )
#             if profile_form.is_valid():
#                 profile_form.save()
#                 messages.success(request, 'Th√¥ng tin c√° nh√¢n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!')
#                 return redirect('profile')
#
#         elif 'password-submit' in request.POST:
#             password_form = CustomPasswordChangeForm(request.user, request.POST)
#             if password_form.is_valid():
#                 user = password_form.save()
#                 update_session_auth_hash(request, user)
#                 messages.success(request, 'M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh c√¥ng!')
#                 return redirect('profile?tab=password')
#
#         elif 'email-submit' in request.POST:
#             email_form = EmailChangeForm(request.POST)
#             # TODO: X·ª≠ l√Ω logic ƒë·ªïi email
#
#     context = {
#         'active_tab': active_tab,
#         'profile_form': profile_form,
#         'password_form': password_form,
#         'email_form': email_form,
#         'user': request.user,
#     }
#     return render(request, 'profile.html', context)
